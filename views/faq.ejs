<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="/css/faq_2.css" rel="stylesheet" >
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>

    <nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #000;">
      <div class="container-fluid">

          <a class="navbar-brand d-flex align-items-center" href="/">
              
              <span style="font-size: 1.5rem; font-weight: bold; font-family: Arial, sans-serif;">CampusLink</span>
          </a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
              <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarNav">
              
              <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                  <li class="nav-item">
                      <a class="nav-link active" aria-current="page" href="/">Home</a>
                  </li>
                  <!-- <li class="nav-item">
                      <a class="nav-link" href="/about">About</a>
                  </li> -->
              </ul>
              <ul class="navbar-nav">
                  <% if (user) { %>
                      <li class="nav-item">
                          <a class="nav-link" href="/profile/<%= user.id %>">Profile</a>
                      </li>
                      <li class="nav-item">
                          <a class="nav-link" href="/user/logout">Logout</a>
                      </li>
                  <% } else { %>
                      <li class="nav-item">
                          <a class="nav-link" href="/login">Login</a>
                      </li>
                      
                  <% } %>
              </ul>
              
                <div class="search-container">
                  <form class="d-flex" role="search">
                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" id="searchBar">
                  </form>
                  <div class="suggestion-box" id="suggestionBox"></div>
                </div>
                
              </div>
          </div>
      </div>
  </nav>
  <!-- <div class="suggestion-box" id="suggestionBox"></div> -->
      
      
    <h1 class="head1">Welcome to Question and Answer Section</h1>
    
    

  <!-- Filter Box -->
  <div class="filter-box">
    <form method="GET" action="/faq/questions">
      <button type="submit" name="filter" value="recentlyAsked" class="filter-btn <%= filter === 'recentlyAsked' ? 'active' : '' %>">Recently Asked</button>
      <button type="submit" name="filter" value="unanswered" class="filter-btn <%= filter === 'unanswered' ? 'active' : '' %>">Unanswered</button>
      <button type="submit" name="filter" value="mostLiked" class="filter-btn <%= filter === 'mostLiked' ? 'active' : '' %>">Most Liked</button>
      <button type="submit" name="filter" value="answered" class="filter-btn <%= filter === 'answered' ? 'active' : '' %>">Answered</button>
    </form>
  </div>
  
  <div class="ask-question">
    <button class="ask-btn" id="askQuestionButton" data-logged-in="<%= user ? 'true' : 'false' %>">Ask a Question</button>
  </div>

  <!-- Question Display Box -->
  <!-- ; -->
  
  <div id="questionBox">
    <% questions.forEach(question => { %>
      <div class="card border-dark mb-3">
        <div class="card-header">Title: <%= question.title %></div>
        <div class="card-body">
          <h5 class="card-title">Question: <%= question.question %></h5>
        </div>
        <div class="card-footer bg-transparent border-success">
          <p>Asked by: <%= question.creator.fullname %></p>
  
          <div class="actions">
            <a href="/faq/view/<%= question._id %>" class="btn btn-primary">Views</a>
            <% if (typeof locals.user !== "undefined" && (user?.role === 'IIITian' || user?.role === 'ADMIN')) { %>
              <a href="/faq/answer/<%= question._id %>" class="btn btn-success">Answer</a>
            <% } %>
            <% if (typeof locals.user !== "undefined" && (user?.id === question.creator.id || user?.role === 'ADMIN')) { %>
              <a href="/faq/delete-question/<%= question._id %>" class="btn btn-danger">Delete</a>
              <a href="/faq/edit-question/<%= question._id %>" class="btn btn-primary">Edit</a>
            <% } %>

            
            <p>Answer Count: <%= question.answerCount %> answers</p>
            <div>
              <button onclick="handleLike('<%= question._id %>')">Like</button>
              <span id="likeCount-<%= question._id %>"><%= question.like %></span>
            </div>
          </div>
        </div>
      </div>
    <% }); %>
  </div>


  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const searchInput = document.querySelector(".form-control[type='search']");
      const suggestionBox = document.createElement("div");
      suggestionBox.className = "suggestions";
      searchInput.parentNode.appendChild(suggestionBox);
    
      searchInput.addEventListener("input", async (event) => {
        const query = event.target.value.trim();
        suggestionBox.innerHTML = "";
    
        if (query.length < 2) return;  // Wait until there are at least 2 characters
    
        try {
          const response = await fetch(`/faq/search?q=${encodeURIComponent(query)}`);
          const results = await response.json();
    
          results.forEach(question => {
            const suggestionItem = document.createElement("div");
            suggestionItem.className = "suggestion-item";
            suggestionItem.textContent = question.title;
            suggestionItem.onclick = () => {
              window.location.href = `/faq/view/${question._id}`;
            };
            suggestionBox.appendChild(suggestionItem);
          });
        } catch (error) {
          console.error("Error fetching suggestions:", error);
        }
      });
    });

    </script>

<script>
  function handleLike(questionId) {
    // Retrieve the cookie and parse it to get the liked questions
    const likesCookie = document.cookie
      .split('; ')
      .find((row) => row.startsWith('likedQuestions='));
    const likedQuestions = likesCookie ? JSON.parse(decodeURIComponent(likesCookie.split('=')[1])) : [];

    // Check if this question is already liked
    const alreadyLiked = likedQuestions.includes(questionId);

    // Toggle like/unlike
    const newLikeStatus = !alreadyLiked;
    const likeCountElement = document.querySelector(`#likeCount-${questionId}`);

    fetch(`/faq/like/${questionId}`, {
      method: 'POST',
      body: JSON.stringify({ like: newLikeStatus }),
      headers: {
        'Content-Type': 'application/json',
      },
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          // Update the like count on the page
          likeCountElement.textContent = data.likeCount;

          // Update the cookie to reflect the new like/unlike status
          if (newLikeStatus) {
            likedQuestions.push(questionId);
          } else {
            const index = likedQuestions.indexOf(questionId);
            if (index > -1) {
              likedQuestions.splice(index, 1);
            }
          }

          // Store the updated liked questions in the cookie
          document.cookie = `likedQuestions=${encodeURIComponent(
            JSON.stringify(likedQuestions)
          )}; path=/; max-age=31536000`; // 1-year expiry
        }
      })
      .catch((error) => console.error('Error:', error));
  }
</script>


<script>
  document.getElementById("askQuestionButton").addEventListener("click", function () {
    // Retrieve the login status from the data attribute
    const isLoggedIn = this.getAttribute("data-logged-in") === "true";

    if (isLoggedIn) {
      // Redirect to the ask question page in the same tab
      window.location.href = '/ask';
    } else {
      // Show a popup prompting the user to log in
      alert("You need to log in to ask a question.");
      // Optionally, redirect to the login page
      window.location.href = '/login';
    }
  });
</script>







  
  

  


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    
</body>
</html>